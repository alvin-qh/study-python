[project]
name = "basic"
version = "0.1.0"
authors = [
    { name = 'Alvin', email = 'quhao317@163.com' },
]
dependencies = [
    "pytz>=2025.2",
    "atomics>=1.0.3",
    "werkzeug>=3.1.3",
    "wrapt>=1.17.2",
    "portalocker>=3.1.1",
    "tzdata>=2025.2",
    "python-dateutil>=2.9.0.post0",
]
requires-python = ">=3.13"
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[dependency-groups]
lint = [
    "autopep8>=2.3.2",
    "pycln>=2.5.0",
]
test = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-rerunfailures>=15.1",
    "pytest-repeat>=0.9.4",
    "pytest-assume>=2.4.3",
    "pytest-xdist>=3.7.0",
    "hypothesis>=6.135.4",
    "faker>=37.3.0",
    "pytest-sugar>=1.0.0",
]
type = [
    "mypy>=1.16.0",
    "mypy-extensions>=1.1.0",
]

[tool.pdm]
distribution = false

[tool.pdm.scripts]
lint = { composite = [
    "autopep8 .",
    "pycln --config=pyproject.toml",
] }
type = { composite = [
    "mypy .",
] }
check = { composite = [
    "lint",
    "type",
    "test",
] }
check-win = { composite = [
    "pycln.exe --config=pyproject.toml",
    "autopep8.exe .",
    "mypy.exe .",
] }
test = "pytest"
test-win = "pytest.exe"
clean = { call = "clear:main" }
type_install = "mypy --install-types"

[tool.pycln]
path = "."
all = true
exclude = '\.history'

[tool.mypy]
strict = true
warn_return_any = true
warn_unused_configs = true
# warn_unreachable = true
ignore_missing_imports = true
disallow_untyped_decorators = false
check_untyped_defs = true
exclude = [
    '.venv',
    '.history',
]

[tool.autopep8]
max_line_length = 120
ignore = [
    'E501',
    'W6',
]
in-place = true
recursive = true
jobs = -1
aggressive = 3

[tool.isort]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
# pythonpath = ['src']
testpaths = [
    "tests",
]
markers = [
    # 自定义测试标识, 取消则对应标识的测试不执行
    'webtest',
]
addopts = [
    # -s 允许标准输出
    # -n auto 自动分配多进程测试
    # --dist=loadfile 按测试文件分配进程
    "-s",
    "--log-cli-level=INFO",
]
filterwarnings = [
    # 忽略指定的警告信息
    'ignore::hypothesis.errors.NonInteractiveExampleWarning',
]
