[project]
authors = [{ name = "Alvin", email = "quhao317@163.com" }]
dependencies = [
    "fastapi[all]",
]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-mock",
    "pytest-asyncio",
    "httpx>=0.25.2",
]
lint = [
    "mypy",
    "autopep8",
]

[tool.pdm.scripts]
check = { composite = ["mypy src", "autopep8 src tests"] }
test = "pytest -v -s tests"
clean = { composite = [
    "rm -rf .pdm-build",
    "rm -rf .mypy_cache",
    "rm -rf .pytest_cache",
    "rm -rf dist",
    'find src -type d -name "__pycache__" -exec rm -rf {} +',
    'find tests -type d -name "__pycache__" -exec rm -rf {} +',
] }
type_install = "mypy --install-types"

[tool.mypy]
python_version = '3.11'
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_decorators = false
disallow_untyped_calls = false
disallow_subclassing_any = false
exclude = []

[tool.autopep8]
max_line_length = 120
ignore = ['E501', 'W6']
in-place = true
recursive = true
jobs = -1
aggressive = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
addopts = "-svv"
