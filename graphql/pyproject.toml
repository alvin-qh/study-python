[project]
name = "study_python_graphene"
version = "1.0.0"
authors = [
    {name = "Alvin", email = "quhao317@163.com"},
]
dependencies = [
    "graphene>=3.3",
    "aiodataloader>=0.4.0",
    "promise>=2.3",
    "pyhumps>=3.8.0",
    "bson>=0.5.10",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
]
lint = [
    "mypy>=1.6.1",
    "autopep8>=2.0.4",
]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.scripts]
check = { composite = ["mypy src", "autopep8 src tests"] }
test = "pytest -v -s tests"
clean = { composite = [
    "rm -rf .mypy_cache",
    "rm -rf .pytest_cache",
    'find src -type d -name "__pycache__" -exec rm -rf {} +',
    'find tests -type d -name "__pycache__" -exec rm -rf {} +',
] }

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_untyped_decorators = false
disallow_subclassing_any = false
check_untyped_defs = true
exclude = []

[tool.autopep8]
max_line_length = 120
ignore = ['E501', 'W6']
in-place = true
recursive = true
jobs = -1
aggressive = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
addopts = "-s"
